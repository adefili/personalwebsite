{"version":3,"sources":["Img/EN.svg","Img/IT.svg","Components/LanguageButton.js","Img/libreria.jpg","Components/Presentation.js","Components/MyTimeline.js","Components/GraphHeader.js","Components/GraphVisualization.js","Components/MultiSelector.js","Components/MyParticels.js","AllComponents.js","App.js","reportWebVitals.js","index.js"],"names":["LanguageButton","props","state","lan","lan_logo","logo_en","changeLan","bind","e","this","setState","handler","logo_it","className","Dropdown","onSelect","Toggle","variant","id","src","alt","Menu","Item","href","eventKey","React","Component","Presentation","title","text","presentation","body","logo","NullComponent","MySeparator","icons","keyboardArrowDown","KeyboardArrowDownRounded","workOutline","WorkOutline","school","School","connector","true","TimelineConnector","false","IconTag","iconName","ConnectorTag","withConnector","TimelineSeparator","TimelineDot","color","MyTimeLineItem","showHidePaper","rotation","hideComponent","hideShowComponent","console","log","rot","transform","TimelineItem","Typography","secondaryText","component","onClick","titleContent","style","paperContent","Button","buttonContent","MyTimeline","language","selected_index","elements","timeline","timelineItems","items","entries","index","separator","length","push","buttonText","icon","timelineTitle","Timeline","align","GraphHeader","changeGraphLabel","graph","Navbar","bg","Nav","Link","GraphVisualization","changeGraph","myConfig","width","window","innerWidth","nodeHighlightBehavior","staticGraph","automaticRearrangeAfterDropNode","highlightDegree","highlightOpacity","initialZoom","maxZoom","minZoom","d3","gravity","linkLength","node","size","highlightStrokeColor","link","highlightColor","graph_data","graph_front_end","graph_data_eng","data","config","onClickNode","nodeId","alert","onClickLink","source","target","MyParticels","particlesInit","particlesLoaded","main","container","init","loaded","height","outerHeight","options","background","value","fpsLimit","interactivity","detectsOn","events","enable","mode","onHover","resize","modes","bubble","distance","duration","opacity","quantity","repulse","particles","links","collisions","move","direction","outMode","random","speed","straight","number","density","value_area","shape","type","detectRetina","AllComponents","presentationRef","createRef","timelineRef","updateLanguage","current","changeText","changeTimelineText","ref","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+kEAAe,MAA0B,+BCA1B,MAA0B,+B,OC4C1BA,E,kDAtCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,IAAK,KACLC,SAAUC,GAEd,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBANF,E,6CASnB,SAAUC,GACNC,KAAKC,SAAS,CAAEP,IAAKK,IACX,OAANA,IACAC,KAAKC,SAAS,CAAEN,SAAUC,IAC1BI,KAAKR,MAAMU,QAAQ,OAEb,OAANH,IACAC,KAAKC,SAAS,CAAEN,SAAUQ,IAC1BH,KAAKR,MAAMU,QAAQ,S,oBAI3B,WACI,OACI,qBAAKE,UAAU,iBAAf,SACQ,eAACC,EAAA,EAAD,CAAUC,SAAUN,KAAKH,UAAzB,UACQ,eAACQ,EAAA,EAASE,OAAV,CAAiBC,QAAQ,UAAUC,GAAG,iBAAiBL,UAAU,WAAjE,UACCJ,KAAKP,MAAMC,IADZ,IACiB,qBAAKgB,IAAKV,KAAKP,MAAME,SAAUgB,IAAI,WAASP,UAAU,gBAEvE,eAACC,EAAA,EAASO,KAAV,WACI,cAACP,EAAA,EAASQ,KAAV,CAAeC,KAAK,aAAaC,SAAS,KAA1C,oBACA,cAACV,EAAA,EAASQ,KAAV,CAAeC,KAAK,aAAaC,SAAS,KAA1C,kC,GA/BHC,IAAMC,WCLpB,MAA0B,qC,QCiC1BC,E,kDA3BX,WAAY1B,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACT0B,MAAOC,EAAKC,aAAaF,MAAlB,GACPC,KAAMA,EAAKC,aAAaC,KAAlB,IAJI,E,8CAQlB,SAAW5B,GACPM,KAAKC,SAAS,CAAEkB,MAAOC,EAAKC,aAAaF,MAAMzB,KAC/CM,KAAKC,SAAS,CAAEmB,KAAMA,EAAKC,aAAaC,KAAK5B,O,oBAGjD,WACI,OACI,sBAAKU,UAAU,eAAf,UACI,qBAAKM,IAAKa,EAAMZ,IAAI,OAAOP,UAAU,yBACrC,sBAAKA,UAAU,mBAAf,UACI,6BAAKJ,KAAKP,MAAM0B,QAChB,4BAAInB,KAAKP,MAAM2B,iB,GArBRJ,IAAMC,W,qICY3BO,E,4JACF,WACI,OAAQ,S,GAFYR,IAAMC,WAM5BQ,E,4MACFC,MAAQ,CACJC,kBAAmBC,IACnBC,YAAaC,IACbC,OAAQC,K,EAEZC,UAAY,CACRC,KAAMC,IACNC,MAAOZ,G,4CAGX,WACI,IAAMa,EAAUrC,KAAK0B,MAAM1B,KAAKR,MAAM8C,UAAY,gBAC5CC,EAAevC,KAAKiC,UAAUjC,KAAKR,MAAMgD,eAAiB,QAChE,OACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAaC,MAAM,UAAnB,SACI,cAACN,EAAD,MAEJ,cAACE,EAAD,W,GAnBUvB,IAAMC,WAyB1B2B,E,kDACF,aAAe,IAAD,8BACV,gBACKnD,MAAQ,CACToD,eAAe,EACfC,SAAU,GAEd,EAAKC,cAAgB,EAAKC,kBAAkBlD,KAAvB,gBANX,E,qDASd,WACIE,KAAKC,SAAS,CAAE4C,eAAgB7C,KAAKP,MAAMoD,gBACxC7C,KAAKP,MAAMoD,cAAe7C,KAAKC,SAAS,CAAE6C,SAAU,IAClD9C,KAAKC,SAAS,CAAE6C,SAAU,MAC/BG,QAAQC,IAAIlD,KAAKP,MAAMqD,Y,oBAG3B,WAAU,IAAD,OACGD,EAAkB7C,KAAKP,MAAvBoD,cAEFM,EAAM,CAAEC,UADC,UAAYpD,KAAKP,MAAMqD,SAAW,QAEjD,OACI,eAACO,EAAA,EAAD,CAAcjD,UAAU,eAAxB,UACI,qBAAKA,UAAU,uBAAf,SACI,cAACkD,EAAA,EAAD,CAAY9C,QAAQ,QAAQmC,MAAM,gBAAlC,SAAmD3C,KAAKR,MAAM+D,kBAElE,cAAC,EAAD,CAAajB,SAAUtC,KAAKR,MAAM8C,SAAUE,cAAexC,KAAKR,MAAMgD,gBACtE,mCACI,sBAAKpC,UAAU,gBAAf,UACI,qBAAKoD,UAAU,KAAKpD,UAAU,yBAAyBqD,QAAS,kBAAM,EAAKT,qBAA3E,SACI,sBAAK5C,UAAU,oBAAf,UACKJ,KAAKR,MAAMkE,aACZ,cAAC,IAAD,CAA0BC,MAAOR,EAAK/C,UAAU,qBAAqBqD,QAAS,kBAAM,EAAKT,4BAGhGH,GACG,gCACI,4BAAI,OACJ,qBAAKzC,UAAU,wBAAf,SACI,qBAAKqD,QAAS,kBAAM,EAAKT,qBAAzB,SACKhD,KAAKR,MAAMoE,iBAGpB,4BAAI,OACJ,qBAAKxD,UAAU,iBAAf,SACA,eAACyD,EAAA,EAAD,WAAU7D,KAAKR,MAAMsE,cAArB,wB,GA7CH9C,IAAMC,WAuGpB8C,E,kDA9CX,WAAYvE,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTuE,SAAU,KACVC,gBAAiB,GAJP,E,sDAQlB,SAAmBvE,GACfM,KAAKC,SAAS,CAAE+D,SAAUtE,M,oBAG9B,WACI,IADK,EACCwE,EAAW9C,EAAK+C,SAASC,cACzBC,EAAQ,GAFT,cAIiBH,EAASI,WAJ1B,IAIL,2BAA0C,CAAC,IAA/BC,EAA8B,0BAClCC,EAAY,OACbD,IAAUL,EAASO,OAAS,IAC3BD,EAAY,SAGhBH,EAAMK,KACF,cAAC,EAAD,CAAgBH,MAAOA,EACPN,eAAgBjE,KAAKP,MAAMwE,eAC3BP,aAAcQ,EAASK,GAAOb,aAAa1D,KAAKP,MAAMuE,UACtDJ,aAAcM,EAASK,GAAOX,aAAa5D,KAAKP,MAAMuE,UACtDT,cAAeW,EAASK,GAAOhB,cAAcvD,KAAKP,MAAMuE,UACxDF,cAAeI,EAASK,GAAOI,WAAW3E,KAAKP,MAAMuE,UACrD1B,SAAU4B,EAASK,GAAOK,KAC1BpC,cAAegC,MAlBlC,8BAqBL,OACI,sBAAKpE,UAAU,WAAf,UACA,qBAAKA,UAAU,aAAf,SAA8BgB,EAAK+C,SAASU,cAAc7E,KAAKP,MAAMuE,YACrE,qBAAK5D,UAAU,oBAAf,SACI,cAAC0E,EAAA,EAAD,CAAUC,MAAM,OAAhB,SACKV,a,GAvCIrD,IAAMC,W,qDCvEhB+D,E,kDA5BX,WAAYxF,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,IAAK,QAET,EAAKuF,iBAAmB,EAAKA,iBAAiBnF,KAAtB,gBALT,E,oDAQnB,SAAiBC,GACbC,KAAKC,SAAS,CAAEiF,MAAOnF,IACvBC,KAAKR,MAAMU,QAAQH,K,oBAGvB,WAAU,IAAD,SACL,OACI,wBAAKK,UAAU,UAAf,0BAAkC,cAAlC,yBACI,cAAC+E,EAAA,EAAD,CAAQ3E,QAAQ,OAAO4E,GAAG,OAA1B,SACI,eAACC,EAAA,EAAD,CAAKjF,UAAU,UAAf,UACI,cAACiF,EAAA,EAAIC,KAAL,CAAU7B,QAAS,kBAAM,EAAKwB,iBAAiB,SAA/C,sBACA,cAACI,EAAA,EAAIC,KAAL,CAAU7B,QAAS,kBAAM,EAAKwB,iBAAiB,UAA/C,6BAJZ,Q,GAhBcjE,IAAMC,WCsFjBsE,E,kDAhFX,WAAY/F,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACXyF,MAAO,QAGT,EAAKM,YAAc,EAAKA,YAAY1F,KAAjB,gBANJ,E,+CASnB,SAAYC,GACRkD,QAAQC,IAAInD,GACZC,KAAKC,SAAS,CAACiF,MAAOnF,M,oBAG1B,WACI,IAGM0F,EAAW,CACbC,MAJ8B,EAApBC,OAAOC,WAAiB,GAKlCC,uBAAuB,EACvBC,aAAa,EACbC,iCAAiC,EACjCC,gBAAiB,EACjBC,iBAAkB,GAClBC,YAAa,EACbC,QAAS,IACTC,QAAS,IACTC,GAAI,CACAC,SAAU,IACVC,WAAY,KAEhBC,KAAM,CACJ7D,MAAO,aACP8D,KAAM,IACNC,qBAAsB,QAExBC,KAAM,CACJC,eAAgB,cAYlBC,EAAa,KAQjB,MAPuB,SAApB7G,KAAKP,MAAMyF,QACV2B,EAAaC,GAEM,QAApB9G,KAAKP,MAAMyF,QACV2B,EAAaE,GAIb,sBAAK3G,UAAU,qBAAf,UAEI,qBAAKA,UAAU,aAAf,6BACA,qBAAKA,UAAU,cAAf,SAEA,sBAAKA,UAAU,iBAAf,UACA,cAAC,EAAD,CAAaF,QAASF,KAAKwF,cAC3B,cAAC,QAAD,CAAOpF,UAAU,eACbK,GAAG,WACHuG,KAAMH,EACNI,OAAQxB,EACRyB,YA5BQ,SAASC,GACzBxB,OAAOyB,MAAP,uBAA6BD,KA4BrBE,YAzBQ,SAASC,EAAQC,GACjC5B,OAAOyB,MAAP,+BAAqCE,EAArC,gBAAmDC,mB,GAjD9BvG,IAAMC,W,8BCJXD,IAAMC,U,iBC6GnBuG,E,kDA5GX,WAAYhI,GAAQ,IAAD,8BACf,cAAMA,IAEDiI,cAAgB,EAAKA,cAAc3H,KAAnB,gBACrB,EAAK4H,gBAAkB,EAAKA,gBAAgB5H,KAArB,gBAJR,E,iDAOjB,SAAc6H,GACZ1E,QAAQC,IAAIyE,K,6BAKd,SAAgBC,GACd3E,QAAQC,IAAI0E,K,oBAGd,WACE,OACE,cAAC,IAAD,CAEEnH,GAAG,cACHoH,KAAM7H,KAAKyH,cACXK,OAAQ9H,KAAK0H,gBACbK,OAAQpC,OAAOqC,YACfC,QAAS,CACPC,WAAY,CACVvF,MAAO,CACLwF,MAAO,YAGXC,SAAU,GACVC,cAAe,CACbC,UAAW,SACXC,OAAQ,CACN9E,QAAS,CACP+E,QAAQ,EACRC,KAAM,QAERC,QAAS,CACPF,QAAQ,EACRC,KAAM,WAERE,QAAQ,GAEVC,MAAO,CACLC,OAAQ,CACNC,SAAU,IACVC,SAAU,EACVC,QAAS,GACTvC,KAAM,IAER/B,KAAM,CACJuE,SAAU,GAEZC,QAAS,CACPJ,SAAU,IACVC,SAAU,MAIhBI,UAAW,CACTxG,MAAO,CACLwF,MAAO,WAETiB,MAAO,CACLzG,MAAO,UACPmG,SAAU,IACVN,QAAQ,EACRQ,QAAS,GACTtD,MAAO,GAET2D,WAAY,CACVb,QAAQ,GAEVc,KAAM,CACJC,UAAW,OACXf,QAAQ,EACRgB,QAAS,SACTC,QAAQ,EACRC,MAAO,IACPC,UAAU,GAEZC,OAAQ,CACNC,QAAS,CACPrB,QAAQ,EACRsB,WAAY,KAEd3B,MAAO,IAETa,QAAS,CACPb,MAAO,IAET4B,MAAO,CACLC,KAAM,UAERvD,KAAM,CACJgD,QAAQ,EACRtB,MAAO,IAGX8B,cAAc,S,GAtGFjJ,IAAMC,WC4CjBiJ,E,kDApCb,WAAY1K,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXuE,SAAU,MAEZ,EAAKmG,gBAAkBnJ,IAAMoJ,YAC7B,EAAKC,YAAcrJ,IAAMoJ,YACzB,EAAKE,eAAiB,EAAKA,eAAexK,KAApB,gBAPL,E,kDAUnB,SAAeJ,GACbM,KAAKC,SAAS,CAAE+D,SAAUtE,IAC1BM,KAAKmK,gBAAgBI,QAAQC,WAAW9K,GACxCM,KAAKqK,YAAYE,QAAQE,mBAAmB/K,K,oBAG9C,WACE,OACE,sBAAKU,UAAU,MAAf,UACE,cAAC,EAAD,CAAaA,UAAU,0BACrB,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CAAgBF,QAASF,KAAKsK,iBAC9B,cAAC,EAAD,CAActG,SAAUhE,KAAKP,MAAMuE,SAAU0G,IAAK1K,KAAKmK,kBACvD,qBAAK/J,UAAU,QAAf,SACE,cAAC,EAAD,CAAYA,UAAU,QAAQsK,IAAK1K,KAAKqK,YAAarG,SAAUhE,KAAKP,MAAMuE,aAE5E,qBAAK5D,UAAU,QAAf,SACE,cAAC,EAAD,CAAoB4D,SAAUhE,KAAKP,MAAMuE,uB,GA7B3BhD,IAAMC,WCCnB0J,OAPf,WACI,OACE,8BACE,cAAC,EAAD,OCMOC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cdfa0667.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/EN.fd46970f.svg\";","export default __webpack_public_path__ + \"static/media/IT.52701962.svg\";","import { Navbar, Nav, Dropdown} from 'react-bootstrap';\r\nimport React from 'react';\r\nimport logo_en from './../Img/EN.svg';\r\nimport logo_it from './../Img/IT.svg';\r\n\r\nclass LanguageButton extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            lan: \"EN\",\r\n            lan_logo: logo_en,\r\n          };\r\n        this.changeLan = this.changeLan.bind(this);\r\n    }\r\n\r\n    changeLan(e){\r\n        this.setState({ lan: e });\r\n        if (e === \"EN\"){\r\n            this.setState({ lan_logo: logo_en });\r\n            this.props.handler(\"en\");\r\n        }\r\n        if (e === \"IT\"){\r\n            this.setState({ lan_logo: logo_it });\r\n            this.props.handler(\"it\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"LanguageButton\" > \r\n                    <Dropdown onSelect={this.changeLan}>\r\n                            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" className=\"DropDown\">\r\n                            {this.state.lan} <img src={this.state.lan_logo} alt=\"\\logo\\\" className=\"flagIcon\"/>\r\n                            </Dropdown.Toggle>\r\n                            <Dropdown.Menu>\r\n                                <Dropdown.Item href=\"#/action-1\" eventKey=\"EN\">Eglish</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#/action-2\" eventKey=\"IT\">Italiano</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n            </div>\r\n          );\r\n      }\r\n}\r\n\r\nexport default LanguageButton;","export default __webpack_public_path__ + \"static/media/libreria.9675502d.jpg\";","import React from 'react';\r\nimport logo from './../Img/libreria.jpg';\r\nimport text from './../json/text_content.json';\r\n\r\nclass Presentation extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            title: text.presentation.title[\"en\"],\r\n            text: text.presentation.body[\"en\"]\r\n          };\r\n    }\r\n\r\n    changeText(lan){\r\n        this.setState({ title: text.presentation.title[lan] });\r\n        this.setState({ text: text.presentation.body[lan] });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Presentation\"> \r\n                <img src={logo} alt=\"Logo\" className=\"PresentationImmagine\"/>\r\n                <div className=\"PresentationText\">\r\n                    <h1>{this.state.title}</h1>\r\n                    <p>{this.state.text}</p>\r\n                </div>\r\n            </div>\r\n            \r\n          );\r\n      }\r\n}\r\n\r\nexport default Presentation;\r\n\r\n","import React from 'react';\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\nimport KeyboardArrowDownRounded from '@material-ui/icons/KeyboardArrowDownRounded';\r\nimport WorkOutline from '@material-ui/icons/WorkOutline';\r\nimport School from '@material-ui/icons/School';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Jumbotron, Button} from 'react-bootstrap';\r\nimport text from './../json/text_content.json';\r\n\r\n\r\nclass NullComponent extends React.Component{\r\n    render(){\r\n        return (null)\r\n    }\r\n}\r\n\r\nclass MySeparator extends React.Component{\r\n    icons = {\r\n        keyboardArrowDown: KeyboardArrowDownRounded,\r\n        workOutline: WorkOutline,\r\n        school: School,\r\n    };\r\n    connector = {\r\n        true: TimelineConnector,\r\n        false: NullComponent,\r\n    };\r\n\r\n    render(){\r\n        const IconTag = this.icons[this.props.iconName || 'fastfoodIcon'];\r\n        const ConnectorTag = this.connector[this.props.withConnector || 'true'];\r\n        return(\r\n            <TimelineSeparator>\r\n                <TimelineDot color=\"inherit\">\r\n                    <IconTag />\r\n                </TimelineDot>\r\n                <ConnectorTag />\r\n            </TimelineSeparator>\r\n        )\r\n    }\r\n}\r\n\r\nclass MyTimeLineItem extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            showHidePaper: false,\r\n            rotation: 0,\r\n          };\r\n        this.hideComponent = this.hideShowComponent.bind(this);\r\n    } \r\n\r\n    hideShowComponent() {\r\n        this.setState({ showHidePaper: !this.state.showHidePaper });\r\n        if(this.state.showHidePaper) this.setState({ rotation: 0 });\r\n        else this.setState({ rotation: 180 });\r\n        console.log(this.state.rotation)\r\n    }\r\n\r\n    render() { \r\n        const { showHidePaper } = this.state;\r\n        const rotate = \"rotate(\" + this.state.rotation + \"deg)\";\r\n        const rot = { transform: rotate };\r\n        return(\r\n            <TimelineItem className=\"TimelineItem\">\r\n                <div className=\"TimelineOppositeItem\"> \r\n                    <Typography variant=\"body2\" color=\"textSecondary\">{this.props.secondaryText}</Typography>\r\n                </div>\r\n                <MySeparator iconName={this.props.iconName} withConnector={this.props.withConnector}/>  \r\n                <>\r\n                    <div className=\"TimelinePaper\">\r\n                        <div component=\"h1\" className=\"TimelineTitleContainer\" onClick={() => this.hideShowComponent()}>\r\n                            <div className=\"TimelineTitleText\">\r\n                                {this.props.titleContent} \r\n                                <KeyboardArrowDownRounded style={rot} className=\"TimelineOpenButton\" onClick={() => this.hideShowComponent()}/>\r\n                            </div>\r\n                        </div>\r\n                        {showHidePaper && (\r\n                            <div>\r\n                                <p>{\"\\n\"}</p>\r\n                                <div className=\"TimelineTextContainer\">\r\n                                    <div onClick={() => this.hideShowComponent()}>\r\n                                        {this.props.paperContent} \r\n                                    </div>\r\n                                </div>\r\n                                <p>{\"\\n\"}</p>\r\n                                <div className=\"TimelineButton\">\r\n                                <Button >{this.props.buttonContent} </Button>  \r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </>         \r\n            </TimelineItem>\r\n        )\r\n    }\r\n}\r\n\r\nclass MyTimeline extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            language: \"en\",\r\n            selected_index: -1\r\n        };\r\n    }\r\n\r\n    changeTimelineText(lan){\r\n        this.setState({ language: lan });\r\n    }\r\n\r\n    render() {   \r\n        const elements = text.timeline.timelineItems;\r\n        const items = [];\r\n      \r\n        for (const [index] of elements.entries()) {\r\n            var separator = \"true\";\r\n            if(index === elements.length - 1){\r\n                separator = \"false\";\r\n            }\r\n\r\n            items.push(\r\n                <MyTimeLineItem index={index}\r\n                                selected_index={this.state.selected_index}\r\n                                titleContent={elements[index].titleContent[this.state.language]}\r\n                                paperContent={elements[index].paperContent[this.state.language]}\r\n                                secondaryText={elements[index].secondaryText[this.state.language]}\r\n                                buttonContent={elements[index].buttonText[this.state.language]}\r\n                                iconName={elements[index].icon}\r\n                                withConnector={separator}/>)\r\n        }\r\n\r\n        return (\r\n            <div className=\"Timeline\">\r\n            <div className=\"jumboTitle\" >{text.timeline.timelineTitle[this.state.language]}</div>\r\n            <div className=\"TimelineComponent\">\r\n                <Timeline align=\"left\" >\r\n                    {items}\r\n                </Timeline>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyTimeline;","import { Navbar, Nav} from 'react-bootstrap';\r\nimport React from 'react';\r\n\r\nclass GraphHeader extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            lan: \"data\"\r\n          };\r\n        this.changeGraphLabel = this.changeGraphLabel.bind(this);\r\n    }\r\n\r\n    changeGraphLabel(e){\r\n        this.setState({ graph: e });\r\n        this.props.handler(e);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Header\" className=\"sticky-top\"> \r\n                <Navbar variant=\"dark\" bg=\"dark\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link onClick={() => this.changeGraphLabel(\"data\")}>Data Eng</Nav.Link>\r\n                        <Nav.Link onClick={() => this.changeGraphLabel(\"front\")}>Front End</Nav.Link>\r\n                    </Nav>\r\n                </Navbar>\r\n\r\n            </div>\r\n          );\r\n      }\r\n}\r\n\r\nexport default GraphHeader;","import { Graph } from \"react-d3-graph\";\r\nimport React from 'react';\r\nimport { Jumbotron} from 'react-bootstrap';\r\nimport graph_data_eng from './../json/data_eng_graph_content.json';\r\nimport graph_front_end from './../json/front_end_graph_content';\r\nimport GraphHeader from './GraphHeader';\r\n\r\nclass GraphVisualization extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          graph: \"data\"\r\n        };\r\n        \r\n        this.changeGraph = this.changeGraph.bind(this);\r\n    }\r\n\r\n    changeGraph(e){\r\n        console.log(e);\r\n        this.setState({graph: e});\r\n    }\r\n\r\n    render() {\r\n        const width = window.innerWidth * 8 / 10\r\n\r\n        // the graph configuration, just override the ones you need\r\n        const myConfig = {\r\n            width: width,\r\n            nodeHighlightBehavior: true,\r\n            staticGraph: false,\r\n            automaticRearrangeAfterDropNode: true,\r\n            highlightDegree: 2,\r\n            highlightOpacity: 0.3,\r\n            initialZoom: 1,\r\n            maxZoom: 1.5,\r\n            minZoom: 0.75,\r\n            d3: {\r\n                gravity: -1000,\r\n                linkLength: 150,\r\n            },\r\n            node: {\r\n              color: \"lightgreen\",\r\n              size: 120,\r\n              highlightStrokeColor: \"blue\",\r\n            },\r\n            link: {\r\n              highlightColor: \"lightblue\",\r\n            },\r\n        };\r\n\r\n        const onClickNode = function(nodeId) {\r\n            window.alert(`Clicked node ${nodeId}`);\r\n        };\r\n\r\n        const onClickLink = function(source, target) {\r\n            window.alert(`Clicked link between ${source} and ${target}`);\r\n        };\r\n\r\n        var graph_data = null;\r\n        if(this.state.graph == \"front\"){\r\n            graph_data = graph_front_end;\r\n        }\r\n        if(this.state.graph == \"data\"){\r\n            graph_data = graph_data_eng;\r\n        }\r\n\r\n        return (   \r\n            <div className=\"GraphVisualization\">\r\n                \r\n                <div className=\"jumboTitle\">Tools and skill</div>\r\n                <div className=\"GraphMaster\">\r\n                \r\n                <div className=\"GraphContainer\">\r\n                <GraphHeader handler={this.changeGraph}/>\r\n                <Graph className=\"GraphContent\"\r\n                    id=\"graph-id\"\r\n                    data={graph_data}\r\n                    config={myConfig}\r\n                    onClickNode={onClickNode}\r\n                    onClickLink={onClickLink}\r\n                />\r\n                </div>\r\n                </div>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nexport default GraphVisualization;","import React from 'react';\r\nimport { Jumbotron, ButtonGroup, ToggleButton} from 'react-bootstrap';\r\n\r\nclass MultiSelector extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            radioValue: 1,\r\n            content_1: true,\r\n            content_2: false,\r\n            content_3: false,\r\n            content_4: false,\r\n        };\r\n    } \r\n\r\n    setRadioValue(val){\r\n        this.setState({ radioValue: val });\r\n        if (val === 1){\r\n            this.setState({ content_1: true });\r\n            this.setState({ content_2: false });\r\n            this.setState({ content_3: false });\r\n            this.setState({ content_4: false });\r\n        }\r\n        else if (val === 2){\r\n            this.setState({ content_1: false });\r\n            this.setState({ content_2: true });\r\n            this.setState({ content_3: false });\r\n            this.setState({ content_4: false });\r\n        }\r\n        else if (val === 3){\r\n            this.setState({ content_1: false });\r\n            this.setState({ content_2: false });\r\n            this.setState({ content_3: true });\r\n            this.setState({ content_4: false });\r\n        }\r\n        else if (val === 4){\r\n            this.setState({ content_1: false });\r\n            this.setState({ content_2: false });\r\n            this.setState({ content_3: false });\r\n            this.setState({ content_4: true });\r\n        }\r\n\r\n        this.setState({ showHidePaper: !this.state.showHidePaper });\r\n    }\r\n\r\n    render() {\r\n\r\n        const radios = [\r\n            { name: 'Progetti', value: '1' },\r\n            { name: 'Music', value: '2' },\r\n            { name: 'Sport', value: '3' },\r\n            { name: 'Lingue', value: '4' },\r\n          ];\r\n        \r\n        return (\r\n            <Jumbotron className=\"MultiSelector\">\r\n                <div className=\"ButtonGroup\">\r\n                    <ButtonGroup toggle>\r\n                        {radios.map((radio, idx) => (\r\n                        <ToggleButton\r\n                            key={idx}\r\n                            type=\"radio\"\r\n                            variant=\"secondary\"\r\n                            name=\"radio\"\r\n                            value={radio.value}\r\n                            checked={this.state.radioValue === radio.value}\r\n                            onChange={(e) => this.setRadioValue(e.currentTarget.value)}\r\n                        >\r\n                            {radio.name}\r\n                        </ToggleButton>\r\n                        ))}\r\n                    </ButtonGroup>\r\n                </div>\r\n                {this.state.content_1 && (\r\n                    <div className=\"ContenutoTemp\">\r\n                        CIAO1\r\n                    </div>\r\n                )}\r\n                {this.state.content_2 && (\r\n                    <div className=\"ContenutoTemp\">\r\n                        ASDCIAO2\r\n                    </div>                \r\n                )}\r\n                {this.state.content_3 && (\r\n                    <div className=\"ContenutoTemp\">\r\n                        ASDCIAO3ASD\r\n                    </div>                \r\n                )}\r\n                {this.state.content_4 && (\r\n                    <div className=\"ContenutoTemp\">\r\n                        ASDASDCIAO4\r\n                    </div>                \r\n                )}\r\n\r\n            </Jumbotron>\r\n                )\r\n            }\r\n}\r\n\r\nexport default MultiSelector;","import Particles from 'react-tsparticles';\r\nimport React from 'react';\r\n\r\nclass MyParticels extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.particlesInit = this.particlesInit.bind(this);\r\n        this.particlesLoaded = this.particlesLoaded.bind(this);\r\n      }\r\n    \r\n      particlesInit(main) {\r\n        console.log(main);\r\n    \r\n        // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\r\n      }\r\n    \r\n      particlesLoaded(container) {\r\n        console.log(container);\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n          <Particles\r\n            \r\n            id=\"tsparticles\"\r\n            init={this.particlesInit}\r\n            loaded={this.particlesLoaded}\r\n            height={window.outerHeight}\r\n            options={{\r\n              background: {\r\n                color: {\r\n                  value: \"#0d47a1\",\r\n                },\r\n              },\r\n              fpsLimit: 60,\r\n              interactivity: {\r\n                detectsOn: \"canvas\",\r\n                events: {\r\n                  onClick: {\r\n                    enable: true,\r\n                    mode: \"push\",\r\n                  },\r\n                  onHover: {\r\n                    enable: true,\r\n                    mode: \"repulse\",\r\n                  },\r\n                  resize: true,\r\n                },\r\n                modes: {\r\n                  bubble: {\r\n                    distance: 200,\r\n                    duration: 2,\r\n                    opacity: 0.8,\r\n                    size: 40,\r\n                  },\r\n                  push: {\r\n                    quantity: 4,\r\n                  },\r\n                  repulse: {\r\n                    distance: 100,\r\n                    duration: 0.4,\r\n                  },\r\n                },\r\n              },\r\n              particles: {\r\n                color: {\r\n                  value: \"#ffffff\",\r\n                },\r\n                links: {\r\n                  color: \"#ffffff\",\r\n                  distance: 150,\r\n                  enable: true,\r\n                  opacity: 0.5,\r\n                  width: 1,\r\n                },\r\n                collisions: {\r\n                  enable: true,\r\n                },\r\n                move: {\r\n                  direction: \"none\",\r\n                  enable: true,\r\n                  outMode: \"bounce\",\r\n                  random: false,\r\n                  speed: 0.75,\r\n                  straight: false,\r\n                },\r\n                number: {\r\n                  density: {\r\n                    enable: true,\r\n                    value_area: 400,\r\n                  },\r\n                  value: 80,\r\n                },\r\n                opacity: {\r\n                  value: 0.5,\r\n                },\r\n                shape: {\r\n                  type: \"circle\",\r\n                },\r\n                size: {\r\n                  random: true,\r\n                  value: 0,\r\n                },\r\n              },\r\n              detectRetina: true,\r\n            }}\r\n          />\r\n        );\r\n      }\r\n    }\r\n\r\nexport default MyParticels;","import './App.css';\r\nimport LanguageButton from './Components/LanguageButton';\r\nimport Presentation from './Components/Presentation';\r\nimport MyTimeline from './Components/MyTimeline';\r\nimport GraphVisualization from './Components/GraphVisualization';\r\nimport MultiSelector from './Components/MultiSelector';\r\nimport MyParticels from './Components/MyParticels';\r\nimport React from 'react';\r\n\r\nclass AllComponents extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      language: \"en\"\r\n    };\r\n    this.presentationRef = React.createRef()\r\n    this.timelineRef = React.createRef()\r\n    this.updateLanguage = this.updateLanguage.bind(this);\r\n  }\r\n\r\n  updateLanguage(lan) {\r\n    this.setState({ language: lan });\r\n    this.presentationRef.current.changeText(lan);\r\n    this.timelineRef.current.changeTimelineText(lan);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"all\">\r\n        <MyParticels className=\"particelsAsBackground\"></ MyParticels>\r\n          <div className=\"WholeSite\">            \r\n            <LanguageButton handler={this.updateLanguage} />\r\n            <Presentation language={this.state.language} ref={this.presentationRef} />\r\n            <div className=\"paper\">\r\n              <MyTimeline className=\"paper\" ref={this.timelineRef} language={this.state.language} />\r\n            </div>\r\n            <div className=\"paper\">\r\n              <GraphVisualization language={this.state.language} />\r\n            </div>\r\n            {/*<MultiSelector language={this.state.language}  />*/}\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllComponents;","import './App.css';\r\nimport AllComponents from './AllComponents';\r\n\r\nfunction App() {\r\n    return (\r\n      <div>\r\n        <AllComponents />\r\n      </div>\r\n    );\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}