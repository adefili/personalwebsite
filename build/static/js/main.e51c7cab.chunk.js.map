{"version":3,"sources":["Img/EN.svg","Img/IT.svg","Components/LanguageButton.js","Img/libreria.jpg","Components/Presentation.js","Components/MyTimeline.js","Components/GraphMultiSelector.js","Components/GraphDescription.js","Components/GraphVisualization.js","Components/MyParticels.js","Components/Language.js","Components/TestAnimation.js","AllComponents.js","App.js","index.js"],"names":["LanguageButton","props","state","lan","lan_logo","logo_en","changeLan","bind","e","this","setState","handler","logo_it","className","Dropdown","onSelect","Toggle","variant","id","src","alt","Menu","Item","href","eventKey","React","Component","Presentation","title","text","presentation","body","logo","NullComponent","MySeparator","icons","keyboardArrowDown","KeyboardArrowDownRounded","workOutline","WorkOutline","school","School","connector","true","TimelineConnector","false","IconTag","iconName","ConnectorTag","withConnector","TimelineSeparator","TimelineDot","color","MyTimeLineItem","showHidePaper","rotation","hideComponent","hideShowComponent","console","log","rot","transform","TimelineItem","Typography","secondaryText","component","onClick","titleContent","style","paperContent","Button","buttonContent","MyTimeline","language","selected_index","elements","timeline","timelineItems","items","entries","index","separator","length","push","buttonText","icon","timelineTitle","Timeline","align","GraphMultiSelector","radioValue","radios","name","short","value","idx","res","ButtonGroup","toggle","map","radio","ToggleButton","type","checked","onChange","setRadioValue","currentTarget","GraphDescription","changeText","changeLanguage","GraphVisualization","graph","width","window","innerWidth","graphVisualizationRef","createRef","changeGraph","handleResize","onClickNode","addEventListener","nodeId","current","source","target","alert","myConfig","nodeHighlightBehavior","staticGraph","automaticRearrangeAfterDropNode","highlightDegree","highlightOpacity","initialZoom","maxZoom","minZoom","d3","gravity","linkLength","node","size","highlightStrokeColor","link","highlightColor","graph_data","graph_front_end","graph_data_eng","data","config","onClickLink","ref","MyParticels","particlesInit","particlesLoaded","main","container","init","loaded","height","outerHeight","options","background","fpsLimit","interactivity","detectsOn","events","enable","mode","onHover","resize","modes","bubble","distance","duration","opacity","quantity","repulse","grab","particles","links","collisions","move","direction","outMode","random","speed","straight","number","density","value_area","shape","detectRetina","Language","max","Math","floor","getRandomInt","class","TestAnimation","from","to","AllComponents","presentationRef","timelineRef","updateLanguage","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e51c7cab.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/EN.fd46970f.svg\";","export default __webpack_public_path__ + \"static/media/IT.52701962.svg\";","import { Navbar, Nav, Dropdown} from 'react-bootstrap';\r\nimport React from 'react';\r\nimport logo_en from './../Img/EN.svg';\r\nimport logo_it from './../Img/IT.svg';\r\n\r\nclass LanguageButton extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            lan: \"EN\",\r\n            lan_logo: logo_en,\r\n          };\r\n        this.changeLan = this.changeLan.bind(this);\r\n    }\r\n\r\n    changeLan(e){\r\n        this.setState({ lan: e });\r\n        if (e === \"EN\"){\r\n            this.setState({ lan_logo: logo_en });\r\n            this.props.handler(\"en\");\r\n        }\r\n        if (e === \"IT\"){\r\n            this.setState({ lan_logo: logo_it });\r\n            this.props.handler(\"it\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"LanguageButton\" > \r\n                    <Dropdown onSelect={this.changeLan}>\r\n                            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" className=\"DropDown\">\r\n                            {this.state.lan} <img src={this.state.lan_logo} alt=\"\\logo\\\" className=\"flagIcon\"/>\r\n                            </Dropdown.Toggle>\r\n                            <Dropdown.Menu>\r\n                                <Dropdown.Item href=\"#/action-1\" eventKey=\"EN\">Eglish</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#/action-2\" eventKey=\"IT\">Italiano</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n            </div>\r\n          );\r\n      }\r\n}\r\n\r\nexport default LanguageButton;","export default __webpack_public_path__ + \"static/media/libreria.9675502d.jpg\";","import React from 'react';\r\nimport logo from './../Img/libreria.jpg';\r\nimport text from './../json/text_content.json';\r\n\r\nclass Presentation extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            title: text.presentation.title[\"en\"],\r\n            text: text.presentation.body[\"en\"]\r\n          };\r\n    }\r\n\r\n    changeText(lan){\r\n        this.setState({ title: text.presentation.title[lan] });\r\n        this.setState({ text: text.presentation.body[lan] });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Presentation\"> \r\n                <img src={logo} alt=\"Logo\" className=\"PresentationImmagine\"/>\r\n                <div className=\"PresentationText\">\r\n                    <h1>{this.state.title}</h1>\r\n                    <p>{this.state.text}</p>\r\n                </div>\r\n            </div>\r\n            \r\n          );\r\n      }\r\n}\r\n\r\nexport default Presentation;\r\n\r\n","import React from 'react';\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\nimport KeyboardArrowDownRounded from '@material-ui/icons/KeyboardArrowDownRounded';\r\nimport WorkOutline from '@material-ui/icons/WorkOutline';\r\nimport School from '@material-ui/icons/School';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Jumbotron, Button} from 'react-bootstrap';\r\nimport text from './../json/text_content.json';\r\n\r\n\r\nclass NullComponent extends React.Component{\r\n    render(){\r\n        return (null)\r\n    }\r\n}\r\n\r\nclass MySeparator extends React.Component{\r\n    icons = {\r\n        keyboardArrowDown: KeyboardArrowDownRounded,\r\n        workOutline: WorkOutline,\r\n        school: School,\r\n    };\r\n    connector = {\r\n        true: TimelineConnector,\r\n        false: NullComponent,\r\n    };\r\n\r\n    render(){\r\n        const IconTag = this.icons[this.props.iconName || 'fastfoodIcon'];\r\n        const ConnectorTag = this.connector[this.props.withConnector || 'true'];\r\n        return(\r\n            <TimelineSeparator>\r\n                <TimelineDot color=\"inherit\">\r\n                    <IconTag />\r\n                </TimelineDot>\r\n                <ConnectorTag />\r\n            </TimelineSeparator>\r\n        )\r\n    }\r\n}\r\n\r\nclass MyTimeLineItem extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            showHidePaper: false,\r\n            rotation: 0,\r\n          };\r\n        this.hideComponent = this.hideShowComponent.bind(this);\r\n    } \r\n\r\n    hideShowComponent() {\r\n        this.setState({ showHidePaper: !this.state.showHidePaper });\r\n        if(this.state.showHidePaper) this.setState({ rotation: 0 });\r\n        else this.setState({ rotation: 180 });\r\n        console.log(this.state.rotation)\r\n    }\r\n\r\n    render() { \r\n        const { showHidePaper } = this.state;\r\n        const rotate = \"rotate(\" + this.state.rotation + \"deg)\";\r\n        const rot = { transform: rotate };\r\n        return(\r\n            <TimelineItem className=\"TimelineItem\">\r\n                <div className=\"TimelineOppositeItem\"> \r\n                    <Typography variant=\"body2\" color=\"textSecondary\">{this.props.secondaryText}</Typography>\r\n                </div>\r\n                <MySeparator iconName={this.props.iconName} withConnector={this.props.withConnector}/>  \r\n                <>\r\n                    <div className=\"TimelinePaper\">\r\n                        <div component=\"h1\" className=\"TimelineTitleContainer\" onClick={() => this.hideShowComponent()}>\r\n                            <div className=\"TimelineTitleText\">\r\n                                {this.props.titleContent} \r\n                                <KeyboardArrowDownRounded style={rot} className=\"TimelineOpenButton\" onClick={() => this.hideShowComponent()}/>\r\n                            </div>\r\n                        </div>\r\n                        {showHidePaper && (\r\n                            <div>\r\n                                <p>{\"\\n\"}</p>\r\n                                <div className=\"TimelineTextContainer\">\r\n                                    <div onClick={() => this.hideShowComponent()}>\r\n                                        {this.props.paperContent} \r\n                                    </div>\r\n                                </div>\r\n                                <p>{\"\\n\"}</p>\r\n                                <div className=\"TimelineButton\">\r\n                                <Button >{this.props.buttonContent} </Button>  \r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </>         \r\n            </TimelineItem>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nclass MyTimeline extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            language: \"en\",\r\n            selected_index: -1\r\n        };\r\n    }\r\n\r\n    changeTimelineText(lan){\r\n        this.setState({ language: lan });\r\n    }\r\n\r\n    render() {   \r\n        const elements = text.timeline.timelineItems;\r\n        const items = [];\r\n      \r\n        for (const [index] of elements.entries()) {\r\n            var separator = \"true\";\r\n            if(index === elements.length - 1){\r\n                separator = \"false\";\r\n            }\r\n\r\n            items.push(\r\n                <MyTimeLineItem index={index}\r\n                                selected_index={this.state.selected_index}\r\n                                titleContent={elements[index].titleContent[this.state.language]}\r\n                                paperContent={elements[index].paperContent[this.state.language]}\r\n                                secondaryText={elements[index].secondaryText[this.state.language]}\r\n                                buttonContent={elements[index].buttonText[this.state.language]}\r\n                                iconName={elements[index].icon}\r\n                                withConnector={separator}/>)\r\n        }\r\n\r\n        return (\r\n            <div className=\"paper\">\r\n            <div className=\"Timeline\">\r\n            <div className=\"jumboTitle\" >{text.timeline.timelineTitle[this.state.language]}</div>\r\n            <div className=\"TimelineComponent\">\r\n                <Timeline align=\"left\" >\r\n                    {items}\r\n                </Timeline>\r\n            </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyTimeline;","import React from 'react';\r\nimport { Jumbotron, ButtonGroup, ToggleButton} from 'react-bootstrap';\r\n\r\nclass GraphMultiSelector extends React.Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            radioValue: 0,\r\n            radios: [\r\n                { name: 'Data Engineer', short:\"data\", value: 0},\r\n                { name: 'Front End', short:\"front\", value: 1},\r\n              ]\r\n        };\r\n    } \r\n\r\n    setRadioValue(idx){\r\n        this.setState({ radioValue: idx });\r\n        const res = this.state.radios[idx].short\r\n        this.props.handler(res);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"GraphMultiSelector\">\r\n                <div className=\"ButtonGroup\">\r\n                    <ButtonGroup toggle>\r\n                        {this.state.radios.map((radio, idx) => (                      \r\n                        <ToggleButton\r\n                            key={idx}\r\n                            type=\"radio\"\r\n                            variant=\"secondary\"\r\n                            name=\"radio\"\r\n                            value={radio.value}\r\n                            checked={this.state.radioValue === radio.value}\r\n                            onChange={(e) => this.setRadioValue(e.currentTarget.value)}\r\n                        >\r\n                            {radio.name}\r\n                        </ToggleButton>\r\n                        ))}\r\n                    </ButtonGroup>\r\n                </div>\r\n            </div>\r\n                )\r\n            }\r\n}\r\n\r\nexport default GraphMultiSelector;","import React from 'react';\n\nclass GraphDescription extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            lan: \"en\",\n            text: \"click a node to show details\"\n          };\n        this.changeText = this.changeText.bind(this);\n        this.changeLanguage = this.changeLanguage.bind(this);\n    }\n\n    changeText(e){\n        this.setState({ text: e });\n    }\n\n    changeLanguage(e){\n        this.setState({ lan: e });\n    }\n\n    render() {\n        return (\n            <div className=\"GraphDescription\">\n                <div>\n                    {this.state.text} PLACEHOLDER {this.state.text} PLACEHOLDER {this.state.text} PLACEHOLDER {this.state.text} PLACEHOLDER\n                    {this.state.text} PLACEHOLDER {this.state.text} PLACEHOLDER {this.state.text} PLACEHOLDER {this.state.text} PLACEHOLDER\n                </div>\n            </div>\n          );\n      }\n}\n\nexport default GraphDescription;","import { Graph } from \"react-d3-graph\";\r\nimport React from 'react';\r\nimport { Jumbotron} from 'react-bootstrap';\r\nimport graph_data_eng from './../json/data_eng_graph_content.json';\r\nimport graph_front_end from './../json/front_end_graph_content';\r\nimport GraphMultiSelector from './GraphMultiSelector';\r\nimport GraphDescription from './GraphDescription';\r\n\r\nclass GraphVisualization extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          graph: \"data\",\r\n          width: window.innerWidth\r\n        };\r\n        this.graphVisualizationRef = React.createRef()\r\n        this.changeGraph = this.changeGraph.bind(this);\r\n        this.handleResize = this.handleResize.bind(this);\r\n        this.onClickNode = this.onClickNode.bind(this);\r\n        window.addEventListener('resize', this.handleResize);\r\n    }\r\n\r\n    changeGraph(e){\r\n        console.log(e);\r\n        this.setState({graph: e});\r\n    }\r\n\r\n    handleResize(e){\r\n        console.log(\"ciao\");\r\n        this.setState({width: window.innerWidth});\r\n    }\r\n\r\n    onClickNode(nodeId) {\r\n        this.graphVisualizationRef.current.changeText(nodeId);\r\n        this.graphVisualizationRef.current.changeLanguage(nodeId);\r\n    };\r\n\r\n    onClickLink(source, target) {\r\n        window.alert(`Clicked link between ${source} and ${target}`);\r\n\r\n    };\r\n\r\n    render() {\r\n        var width = 100;\r\n        if(this.state.width < 1080){\r\n            width = this.state.width * 90 * 935 / 1000 / 100;\r\n        }\r\n        else {\r\n            width = 1080;\r\n        }\r\n\r\n        // the graph configuration, just override the ones you need\r\n        const myConfig = {\r\n            width: width,\r\n            nodeHighlightBehavior: true,\r\n            staticGraph: false,\r\n            automaticRearrangeAfterDropNode: true,\r\n            highlightDegree: 2,\r\n            highlightOpacity: 0.3,\r\n            initialZoom: 0.8,\r\n            maxZoom: 0.8,\r\n            minZoom: 0.8,\r\n            d3: {\r\n                gravity: -1000,\r\n                linkLength: 160,\r\n            },\r\n            node: {\r\n              color: \"lightgreen\",\r\n              size: 120,\r\n              highlightStrokeColor: \"blue\",\r\n            },\r\n            link: {\r\n              highlightColor: \"lightblue\",\r\n            },\r\n        };\r\n\r\n        var graph_data = null;\r\n        if(this.state.graph == \"front\"){\r\n            graph_data = graph_front_end;\r\n        }\r\n        if(this.state.graph == \"data\"){\r\n            graph_data = graph_data_eng;\r\n        }\r\n\r\n        return (\r\n            <div className=\"paper\">   \r\n            <div className=\"GraphVisualization\">\r\n                <div className=\"jumboTitle\">Tools and skill</div>    \r\n                <div className=\"GraphMaster\">\r\n                    <GraphMultiSelector handler={this.changeGraph}/>\r\n                    <div className=\"GraphContainer\">\r\n                        <Graph className=\"GraphContent\"\r\n                            id=\"graph-id\"\r\n                            data={graph_data}\r\n                            config={myConfig}\r\n                            onClickNode={this.onClickNode}\r\n                            onClickLink={this.onClickLink}\r\n                        />\r\n                        <GraphDescription ref={this.graphVisualizationRef} />\r\n                    </div>  \r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GraphVisualization;","import Particles from 'react-tsparticles';\r\nimport React from 'react';\r\n\r\nclass MyParticels extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.particlesInit = this.particlesInit.bind(this);\r\n        this.particlesLoaded = this.particlesLoaded.bind(this);\r\n      }\r\n    \r\n      particlesInit(main) {\r\n        console.log(main);\r\n    \r\n        // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\r\n      }\r\n    \r\n      particlesLoaded(container) {\r\n        console.log(container);\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n          <Particles\r\n            id=\"tsparticles\"\r\n            init={this.particlesInit}\r\n            loaded={this.particlesLoaded}\r\n            height={window.outerHeight * 1.2}\r\n            options={{\r\n              background: {\r\n                color: {\r\n                  value: \"#0d47a1\",\r\n                },\r\n              },\r\n              fpsLimit: 45,\r\n              interactivity: {\r\n                detectsOn: \"window\",\r\n                events: {\r\n                  onClick: {\r\n                    enable: true,\r\n                    mode: \"push\",\r\n                  },\r\n                  onHover: {\r\n                    enable: true,\r\n                    mode: \"grab\",\r\n                  },\r\n                  resize: true,\r\n                },\r\n                modes: {\r\n                  bubble: {\r\n                    distance: 200,\r\n                    duration: 2,\r\n                    opacity: 0.8,\r\n                    size: 40,\r\n                  },\r\n                  push: {\r\n                    quantity: 1,\r\n                  },\r\n                  repulse: {\r\n                    distance: 100,\r\n                    duration: 0.4,\r\n                  },\r\n                  grab: {\r\n                    distance: 200,\r\n                  },\r\n                },\r\n              },\r\n              particles: {\r\n                color: {\r\n                  value: \"#ffffff\",\r\n                },\r\n                links: {\r\n                  color: \"#ffffff\",\r\n                  distance: 150,\r\n                  enable: true,\r\n                  opacity: 0.5,\r\n                  width: 1,\r\n                },\r\n                collisions: {\r\n                  enable: true,\r\n                },\r\n                move: {\r\n                  direction: \"none\",\r\n                  enable: true,\r\n                  outMode: \"bounce\",\r\n                  random: false,\r\n                  speed: 2,\r\n                  straight: false,\r\n                },\r\n                number: {\r\n                  density: {\r\n                    enable: true,\r\n                    value_area: 400,\r\n                  },\r\n                  value: 100,\r\n                },\r\n                opacity: {\r\n                  value: 0.5,\r\n                },\r\n                shape: {\r\n                  type: \"circle\",\r\n                },\r\n                size: {\r\n                  random: true,\r\n                  value: 0,\r\n                },\r\n              },\r\n              detectRetina: true,\r\n            }}\r\n          />\r\n        );\r\n      }\r\n    }\r\n\r\nexport default MyParticels;","import React from 'react';\n\nclass Language extends React.Component{\n    constructor(props){\n        super(props);\n    }\n\n    getRandomInt(max) {\n        return Math.floor(Math.random() * Math.floor(max));\n      }\n\n    render() {   \n        const items = [];\n      \n        for (var idx = 0; idx < 4; idx++) {\n\n            var width = (100 / 5 * ( this.getRandomInt(4) +1 )) + \"%\";\n            items.push(\n                <div class=\"grid-container\">\n                        <div class=\"LanguageName\">English Reading</div>\n\n                        <div class=\"LanguageBar\" style={{width: width}}></div>\n                        \n                        <div class=\"LanguageDescription\">With the continuous improvement of information technology and increasing numbers of Web resources, the mode of English reading teaching has changed fundamentally, and the diversity and flexibility of English reading materials achieve a great progress. Because English reading materials were hand-election</div>\n                    </div>)\n        }\n\n        return (\n            <div className=\"paper\">\n                <div className=\"jumboTitle\" >Lingue</div>   \n                <div className=\"Language\">\n                    {items}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Language;","import React from 'react';\nimport {Spring} from 'react-spring/renderprops';\n\nclass TestAnimation extends React.Component{\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"paper\">\n            <div className=\"jumboTitle\" >TestAnimation</div>   \n\n            <Spring from={{ opacity: 0 }}\n                    to={{ opacity: 1 }}>\n                {props => <div style={props}>hello</div>}\n            </Spring>\n        </div>\n            \n          );\n      }\n}\n\nexport default TestAnimation;","import './App.css';\r\nimport LanguageButton from './Components/LanguageButton';\r\nimport Presentation from './Components/Presentation';\r\nimport MyTimeline from './Components/MyTimeline';\r\nimport GraphVisualization from './Components/GraphVisualization';\r\nimport MyParticels from './Components/MyParticels';\r\nimport Language from './Components/Language';\r\nimport TestAnimation from './Components/TestAnimation'\r\nimport React from 'react';\r\n\r\nclass AllComponents extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      language: \"en\"\r\n    };\r\n    this.presentationRef = React.createRef()\r\n    this.timelineRef = React.createRef()\r\n    this.updateLanguage = this.updateLanguage.bind(this);\r\n  }\r\n\r\n  updateLanguage(lan) {\r\n    this.setState({ language: lan });\r\n    this.presentationRef.current.changeText(lan);\r\n    this.timelineRef.current.changeLanguage(lan);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"all\">\r\n        <MyParticels className=\"particelsAsBackground\"></ MyParticels>\r\n          <div className=\"WholeSite\">            \r\n            <LanguageButton handler={this.updateLanguage} />\r\n            \r\n            <Presentation language={this.state.language} ref={this.presentationRef} />\r\n            <MyTimeline ref={this.timelineRef} language={this.state.language} />\r\n            <GraphVisualization language={this.state.language} />\r\n            <Language />\r\n            <TestAnimation />\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllComponents;","import './App.css';\r\nimport AllComponents from './AllComponents';\r\n\r\nfunction App() {\r\n    return (\r\n      <div>\r\n        <AllComponents />\r\n      </div>\r\n    );\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n//import reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n"],"sourceRoot":""}